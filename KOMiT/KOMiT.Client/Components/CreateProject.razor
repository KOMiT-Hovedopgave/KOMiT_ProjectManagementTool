@using KOMiT.Core.Model
@inject HttpClient http
@inject NavigationManager navManger
@inject ConfirmationService confirmationService

<div class="row">
    <div class="col-md-4">
        <EditForm class="container" Model="project">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Projektnavn</label>
                <input @bind-value="project.Name" class="form-control" />
                <span asp-validation-for="project.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Beskrivelse</label>
                <input @bind-value="project.Description" class="form-control" />
                <span asp-validation-for="project.Beskrivelse" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Projekttype</label>
                <select @bind="project.ProjectType" class="form-control" style="width: 150px;">
                    <option value="Drift">Drift</option>
                    <option value="Udvikling">Udvikling</option>
                    <option value="Integration">Integration</option>
                </select>
                <span asp-validation-for="project.Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Prioritet</label>
                <select @bind="project.Priority" class="form-control" style="width: 150px;">
                    <option value="Høj">Høj</option>
                    <option value="Mellem">Mellem</option>
                    <option value="Lav">Lav</option>
                </select>
                <span asp-validation-for="project.Prioritet" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Status</label>
                <select @bind="project.Status" class="form-control" style="width: 150px;">
                    <option value="Aktiv">Aktiv</option>
                    <option value="Inaktiv">Inaktiv</option>
                    <option value="Færdiggjort">Færdiggjort</option>
                </select>
                <span asp-validation-for="project.Status" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Startdato</label>
                        <div style="display: flex; gap: 10px;">
                            <InputDate style="width: 150px;" @bind-Value="project.EstimatedStartDate" class="form-control" />
                        </div>
                        <span asp-validation-for="project.Startdato" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Slutdato</label>
                        <div style="display: flex; gap: 10px;">
                            <InputDate style="width: 150px;" @bind-Value="project.EstimatedEndDate" class="form-control" />
                        </div>
                        <span asp-validation-for="project.slutdato" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group" style="display: flex; justify-content: flex-end; margin-top: 10px;">
                        <button class="btn btn-primary" style="width: 100px;" @onclick="Create">Opret</button>
                        <Button Color="ButtonColor.Secondary" style="width: 100px; margin-left: 10px;" @onclick="OnClick">Luk</Button>
                    </div>
                </div>
            </div>

        </EditForm>
    </div>
</div>

@if (!string.IsNullOrEmpty(confirmationService.SuccessMessage))
{
    <div class="alert alert-success">
        <b>@confirmationService.SuccessMessage</b>
    </div>
}

@if (!string.IsNullOrEmpty(confirmationService.WarningMessage))
{
    <div class="alert alert-danger">
        <b>@confirmationService.WarningMessage</b>
    </div>
}

@code {
    public Project project = new Project();
    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    private async Task Create()
    {
        if (project.EstimatedEndDate == default)
        {
            project.EstimatedEndDate = DateTime.Now;
        }
        project.EstimatedStartDate = DateTime.Now;
        var response = await http.PostAsJsonAsync("https://localhost:7282/api/Project/CreateProject", project);

        if (response.IsSuccessStatusCode)
        {
            confirmationService.SetSuccessMessage("Projektet er oprettet succesfuldt!");
            navManger.NavigateTo("/");
        }
        else
        {
            confirmationService.SetWarningMessage("Fejl ved oprettelse af Projekt. Prøv igen.");
        }
    }
    void SetPriority(Core.Model.Enum.Priority priority)
    {
        project.Priority = priority;
    }
}
