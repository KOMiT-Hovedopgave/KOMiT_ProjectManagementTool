@using KOMiT.Core.Model
@inject HttpClient http
@inject NavigationManager navManger
@inject ConfirmationService confirmationService

<div class="row">
    <div class="col-md-4">
        <EditForm class="container" Model="Project" OnInvalidSubmit="@Update">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label>Projektnavn</label>
                <input @bind-value="Project.Name" class="form-control" />
                <span asp-validation-for="Project.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Beskrivelse</label>
                <input @bind-value="Project.Description" class="form-control" />
                <span asp-validation-for="Project.Beskrivelse" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Projekttype</label>
                <select @bind="Project.ProjectType" class="form-control" style="width: 150px;">
                    <option value="Drift">Drift</option>
                    <option value="Udvikling">Udvikling</option>
                    <option value="Integration">Integration</option>
                </select>
                <span asp-validation-for="Project.Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Prioritet</label>
                <select @bind="Project.Priority" class="form-control" style="width: 150px;">
                    <option value="Høj">Høj</option>
                    <option value="Mellem">Mellem</option>
                    <option value="Lav">Lav</option>
                </select>
                <span asp-validation-for="Project.Prioritet" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Status</label>
                <select @bind="Project.Status" class="form-control" style="width: 150px;">
                    <option value="Aktiv">Aktiv</option>
                    <option value="Inaktiv">Inaktiv</option>
                    <option value="Færdiggjort">Færdiggjort</option>
                </select>
                <span asp-validation-for="Project.Status" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Startdato</label>
                        <div style="display: flex; gap: 10px;">
                            <InputDate style="width: 150px;" @bind-Value="Project.EstimatedStartDate" class="form-control" />
                        </div>
                        <span asp-validation-for="Project.Startdato" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>Slutdato</label>
                        <div style="display: flex; gap: 10px;">
                            <InputDate style="width: 150px;" @bind-Value="Project.EstimatedEndDate" class="form-control" />
                        </div>
                        <span asp-validation-for="Project.slutdato" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div style="margin-top:10px;">
                <Button Color="ButtonColor.Secondary" @onclick="OnClick">Luk</Button>
                <Button Color="ButtonColor.Primary" @onclick="Update"> Opdatere</Button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter]
    public int ID { get; set; }

    [Parameter]
    public Project? Project { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }

    [Parameter]
    public EventCallback OnUpdate { get; set; }

    protected override async Task OnInitializedAsync()
    {

    }

    private async Task Update()
    {
        var response = await http.PostAsJsonAsync("https://localhost:7282/api/Project/UpdateProject", Project);
        await OnUpdate.InvokeAsync();

        if (response.IsSuccessStatusCode)
        {
            confirmationService.SetSuccessMessage("Projektet er opdateret!");
        }
        else
        {
            confirmationService.SetWarningMessage("Fejl ved opdatering af projektet. Prøv igen.");
        }
    }
    void SetPriority(Core.Model.Enum.Priority priority)
    {
        Project.Priority = priority;
    }
}